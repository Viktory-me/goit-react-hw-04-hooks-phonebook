{"version":3,"sources":["Components/Section/Section.styled.jsx","Components/Section/Section.jsx","Components/Container/Container.syled.jsx","Components/Container/Container.jsx","Components/Form/Form.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactList.jsx","App.js","index.js"],"names":["Sections","styled","section","Section","children","Contain","div","MyForm","onSubmit","initialValues","name","number","validate","values","errors","test","setSubmitting","resetForm","autoComplete","htmlFor","color","type","placeholder","FilterContainer","Input","input","FilterTitle","p","Filter","value","onChange","ListContact","ul","ItemContact","li","Paragraph","Button","button","ContactList","contacts","onDeleteContact","map","id","onClick","initialContacts","App","useState","setContacts","filter","setFilter","isFirstRender","useRef","useEffect","current","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","newContact","uuid","e","currentTarget","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAEaA,EAAWC,IAAOC,QAAV,yO,OCUNC,EARC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OAAO,cAACJ,EAAD,UAAWI,KCHPC,EAAUJ,IAAOK,IAAV,+JCSLD,I,4BCyCAE,I,cAAAA,EA9Cf,YAA+B,IAAbC,EAAY,EAAZA,SAChB,OACE,cAAC,IAAD,CACEC,cAAe,CAAEC,KAAM,GAAIC,OAAQ,IACnCC,SAAU,SAACC,GACT,IAAMC,EAAS,GAaf,OAZKD,EAAOH,KAEAG,EAAOF,OAGhB,8EAA8EI,KAC7EF,EAAOF,UAGTG,EAAOH,OACL,kFAPFG,EAAOH,OAAS,eAFhBG,EAAOJ,KAAO,aAWTI,GAETN,SAAU,SAACK,EAAD,GAA2C,IAAhCG,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAElCT,EAASK,GACTG,GAAc,GACdC,KAtBJ,SAyBE,eAAC,IAAD,CAAMC,aAAa,MAAnB,UACE,wBAAOC,QAAQ,OAAf,UACE,cAAC,IAAD,CAAgBC,MAAM,cADxB,WAGA,cAAC,IAAD,CAAOC,KAAK,OAAOX,KAAK,OAAOY,YAAY,eAC3C,cAAC,IAAD,CAAcZ,KAAK,SAEnB,wBAAOS,QAAQ,SAAf,UACE,cAAC,IAAD,CAASC,MAAM,cADjB,YAGA,cAAC,IAAD,CAAOC,KAAK,MAAMX,KAAK,SAASY,YAAY,gBAC5C,cAAC,IAAD,CAAcZ,KAAK,WAEnB,wBAAQW,KAAK,SAAb,+BC5CKE,EAAkBtB,IAAOK,IAAV,0BACfkB,EAAQvB,IAAOwB,MAAV,0BACLC,EAAczB,IAAO0B,EAAV,qICCT,SAASC,EAAT,GAAsC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACtC,OACE,eAACP,EAAD,WACE,eAACG,EAAD,WACE,cAAC,IAAD,CAAiBN,MAAM,cADzB,2BAIA,cAACI,EAAD,CACEH,KAAK,OACLQ,MAAOA,EACPC,SAAUA,EACVR,YAAY,kBCdb,IAAMS,EAAc9B,IAAO+B,GAAV,sHAMXC,EAAchC,IAAOiC,GAAV,iIAOXC,EAAYlC,IAAO0B,EAAV,+GAMTS,EAASnC,IAAOoC,OAAV,0BCMJC,MAlBf,YAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC/B,OACE,cAACT,EAAD,UACGQ,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIhC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,eAACsB,EAAD,WACE,cAAC,IAAD,CAAgBb,MAAM,cACtB,cAACe,EAAD,UACGzB,IAHL,IAIe,cAAC,IAAD,CAASU,MAAM,cAAuB,IACnD,cAACe,EAAD,UAAYxB,IACZ,cAACyB,EAAD,CAAQO,QAAS,kBAAMH,EAAgBE,IAAvC,SACE,cAAC,IAAD,QAPcA,SCJpBE,EAAkB,CACtB,CAAEF,GAAI,KAAMhC,KAAM,gBAAiBC,OAAQ,eAC3C,CAAE+B,GAAI,KAAMhC,KAAM,uCAA8BC,OAAQ,eACxD,CAAE+B,GAAI,KAAMhC,KAAM,kCAAyBC,OAAQ,gBAiEtCkC,MA/Df,WACE,MAAgCC,mBAASF,GAAzC,mBAAOL,EAAP,KAAiBQ,EAAjB,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACMC,EAAgBC,kBAAO,GAE7BC,qBAAU,WACR,GAAIF,EAAcG,QAAS,CACzB,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAOvD,OALIJ,GACFP,EAAYO,QAGdJ,EAAcG,SAAU,GAG1BI,aAAaE,QAAQ,WAAYJ,KAAKK,UAAUrB,MAC/C,CAACA,EAAUQ,IAEd,IAiBMc,EAPqB,WACzB,IAAMC,EAAmBd,EAAOe,cAEhC,OAAOxB,EAASS,QAAO,SAACgB,GAAD,OACrBA,EAAQtD,KAAKqD,cAAcE,SAASH,MAGhBI,GAMxB,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAQ1D,SA3BK,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACpBwD,EAAa,CACjBzB,GAAI0B,cACJ1D,OACAC,UAGFoC,EAAY,CAACoB,GAAF,mBAAiB5B,MAoBMA,SAAUA,OAE1C,eAAC,EAAD,WACE,0CACA,cAACX,EAAD,CACEC,MAAOmB,EACPlB,SAAU,SAACuC,GAAD,OAAOpB,EAAUoB,EAAEC,cAAczC,UAE7C,cAAC,EAAD,CACEU,SAAUsB,EACVrB,gBAlBc,SAAC+B,GACrBxB,EAAYR,EAASS,QAAO,SAACgB,GAAD,OAAaA,EAAQtB,KAAO6B,gB,MChD5DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.671502b4.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Sections = styled.section`\r\n  background-color: #44424232;\r\n  margin-top: 20px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  padding-top: 10px;\r\n  padding-bottom: 15px;\r\n  &:not(:first-of-type) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Sections } from \"./Section.styled\";\r\n\r\nconst Section = ({ children }) => {\r\n  return <Sections>{children}</Sections>;\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Contain = styled.div`\r\n  max-width: 320px;\r\n  border: thick double #c21111e2;\r\n  border-radius: 20px;\r\n  background-color: #ffffffba;\r\n  margin: 0 auto;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Contain } from \"./Container.syled\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <Contain>{children}</Contain>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Contain;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { RiContactsLine } from \"react-icons/ri\";\r\nimport { BsPhone } from \"react-icons/bs\";\r\nimport \"./Form.module.css\";\r\n\r\nfunction MyForm({ onSubmit }) {\r\n  return (\r\n    <Formik\r\n      initialValues={{ name: \"\", number: \"\" }}\r\n      validate={(values) => {\r\n        const errors = {};\r\n        if (!values.name) {\r\n          errors.name = \"Enter name\";\r\n        } else if (!values.number) {\r\n          errors.number = \"Enter number\";\r\n        } else if (\r\n          !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\r\n            values.number\r\n          )\r\n        ) {\r\n          errors.number =\r\n            \"The number can only include numbers, spaces, dashes, brackets and start with +\";\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        // console.log(values);\r\n        onSubmit(values);\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      <Form autoComplete='off'>\r\n        <label htmlFor='name'>\r\n          <RiContactsLine color='#c21111e2'></RiContactsLine> Name\r\n        </label>\r\n        <Field type='name' name='name' placeholder='enter name' />\r\n        <ErrorMessage name='name' />\r\n\r\n        <label htmlFor='number'>\r\n          <BsPhone color='#c21111e2'></BsPhone>Number\r\n        </label>\r\n        <Field type='tel' name='number' placeholder='+111-111-11' />\r\n        <ErrorMessage name='number' />\r\n\r\n        <button type='submit'>Add contact</button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default MyForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FilterContainer = styled.div``;\r\nexport const Input = styled.input``;\r\nexport const FilterTitle = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  margin-bottom: 5px;\r\n  font-weight: 500;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { RiPhoneFindLine } from \"react-icons/ri\";\r\nimport { FilterContainer, Input, FilterTitle } from \"./Filter.styled\";\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <FilterContainer>\r\n      <FilterTitle>\r\n        <RiPhoneFindLine color='#c21111e2'></RiPhoneFindLine>\r\n        Find contacts by name\r\n      </FilterTitle>\r\n      <Input\r\n        type='text'\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder='enter name'\r\n      />\r\n    </FilterContainer>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ListContact = styled.ul`\r\n  list-style: none;\r\n  padding-inline-start: 5px;\r\n  margin: 0 auto;\r\n  margin-top: 5px;\r\n`;\r\nexport const ItemContact = styled.li`\r\n  padding: 5px 0 5px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  margin-left: 1px;\r\n  margin-right: 10px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n`;\r\nexport const Button = styled.button``;\r\n","import { RiContactsLine, RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { BsPhone } from \"react-icons/bs\";\r\nimport {\r\n  ListContact,\r\n  ItemContact,\r\n  Paragraph,\r\n  Button,\r\n} from \"./ContactList.styled\";\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ListContact>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ItemContact key={id}>\r\n          <RiContactsLine color='#c21111e2'></RiContactsLine>\r\n          <Paragraph>\r\n            {name}\r\n          </Paragraph> <BsPhone color='#c21111e2'></BsPhone>{\" \"}\r\n          <Paragraph>{number}</Paragraph>\r\n          <Button onClick={() => onDeleteContact(id)}>\r\n            <RiDeleteBinLine></RiDeleteBinLine>\r\n          </Button>\r\n        </ItemContact>\r\n      ))}\r\n    </ListContact>\r\n  );\r\n}\r\nexport default ContactList;\r\n","import { useState, useEffect, useRef } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport \"./App.css\";\nimport Section from \"./Components/Section/Section\";\nimport Container from \"./Components/Container/Container\";\nimport MyForm from \"./Components/Form/Form\";\nimport Filter from \"./Components/Filter/Filter\";\nimport ContactList from \"./Components/ContactList/ContactList\";\n\nconst initialContacts = [\n  { id: \"11\", name: \"Mike Wazowski\", number: \"22445566778\" },\n  { id: \"22\", name: \"James P. “Sulley” Sullivan\", number: \"55664411229\" },\n  { id: \"23\", name: \"Randall “Randy” Boggs\", number: \"88999124562\" },\n];\nfunction App() {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState(\"\");\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n      if (parsedContacts) {\n        setContacts(parsedContacts);\n      }\n\n      isFirstRender.current = false;\n      return;\n    }\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts, setContacts]);\n\n  const addContact = ({ name, number }) => {\n    const newContact = {\n      id: uuid(),\n      name,\n      number,\n    };\n\n    setContacts([newContact, ...contacts]);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const visibleContacts = getVisibleContacts();\n\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  return (\n    <Container>\n      <Section>\n        <h1>Phonebook</h1>\n        <MyForm onSubmit={addContact} contacts={contacts} />\n      </Section>\n      <Section>\n        <h2>Contacts</h2>\n        <Filter\n          value={filter}\n          onChange={(e) => setFilter(e.currentTarget.value)}\n        />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact}\n        ></ContactList>\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}